<launch>

<node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node">
   <param name="frame_id" type="string" value="plate_top_link"/>
<!-- respawn="false" output="screen">
   <param name="calibrate_time" type="bool" value="true"/> 
   <param name="port" type="string" value="/dev/ttyACM0"/> 
   <param name="intensity" type="bool" value="false"/>
   <param name="min_ang" value="-2.356194437"/>   
   <param name="max_ang" value="2.35619443"/>    
   <param name="cluster" value="1"/>-->
   </node>

  <!-- Gmapping demo launch file -->


  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_rviz_launchers)/rviz/navigation.rviz"/>

  <!-- <include file="$(find turtlebot_navigation)/launch/includes/gmapping.launch.xml"/> -->
  <arg name="scan_topic"  default="/scan" />
  <arg name="base_frame"  default="base_footprint"/>
  <arg name="odom_frame"  default="odom"/>

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="$(arg base_frame)"/>
    <param name="odom_frame" value="$(arg odom_frame)"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="6.0"/>
    <param name="maxRange" value="8.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="minimumScore" value="200"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="linearUpdate" value="0.5"/>
    <param name="angularUpdate" value="0.436"/>
    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="80"/>
  <!--
    <param name="xmin" value="-50.0"/>
    <param name="ymin" value="-50.0"/>
    <param name="xmax" value="50.0"/>
    <param name="ymax" value="50.0"/>
  make the starting size small for the benefit of the Android client's memory...
  -->
    <param name="xmin" value="-5.0"/>
    <param name="ymin" value="-5.0"/>
    <param name="xmax" value="5.0"/>
    <param name="ymax" value="5.0"/>

<param name="delta" value="0.03"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>

<!--
    <param name="delta" value="0.05"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>
-->
  <!-- <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/> -->

  <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>
  
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/dummy.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find navigation_pro)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation_pro)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find navigation_pro)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find navigation_pro)/param/global_costmap_params.yaml" command="load" />
    
<rosparam file="$(find navigation_pro)/param/dwa_local_planner_params.yaml" command="load" />
   

 <rosparam file="$(find turtlebot_navigation)/param/move_base_params.yaml" command="load" />
    <!--<rosparam file="$(find turtlebot_navigation)/param/global_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/navfn_global_planner_params.yaml" command="load" />-->
    <!-- external params file that could be loaded into the move_base namespace 
    <rosparam file="$(arg custom_param_file)" command="load" />-->
    
    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg scan_topic)"/>
  </node>
<!--
  <arg name="initial_pose_x" default="0.0"/> 
  <arg name="initial_pose_y" default="0.0"/> 
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(find turtlebot_navigation)/launch/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
-->

 <!--<node pkg="navigation_pro" type="sensor_reading_node" name="sensor_reading_node">
 </node>-->
 
 



</launch>





<!--

roslaunch turtlebot_gazebo turtlebot_world.launch
roslaunch turtlebot_rviz_launchers view_robot.launch
roslaunch turtlebot_navigation gmapping.launch.xml

roslaunch turtlebot_teleop keyboard_teleop.launch

rosrun map_server map_saver -f /tmp/my_map


export TURTLEBOT_3D_SENSOR="hokuyo"


-->
